@page "/Competitions"
@page "/Competition"
@inject BrewCompDbContext DBContext

<div class="vstack gap-lg-2 gap-1">
    <div><h3>Competitions</h3></div>
    <MudDataGrid Items="@DBContext.Competitions" Filterable=true >
        <Columns>
            <PropertyColumn Property="c=>c.Name" Title="Competition Name"/>
            <PropertyColumn Property="c=>c.Entries.Count" Title="Entries"/>
            <PropertyColumn Property="c=>c.EntryLimit"/>
            <PropertyColumn Property="c=>c.EntryCost" Format="C"/>
            <TemplateColumn Title="Competition Dates">
                <CellTemplate>
                    <MudStack>
                        <div><strong>Starts: </strong><BlazorTime.ToLocal DateTime=@context.Item.CompetitionDates.StartDate Format="yyyy-mm-dd hh:MM TT"/></div>
                        @if(context.Item.CompetitionDates.EndDate.HasValue)
                        {
                            <div><strong>Ends: </strong><BlazorTime.ToLocal DateTime=@context.Item.CompetitionDates.EndDate.Value Format="yyyy-mm-dd hh:MM TT" /></div>
                        }
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
</div>


@code {
    private AddCompModal? addCompModal = default!;

    private async Task ShowAddCompModal()
    {
        if (addCompModal is null) return;
        await addCompModal.ShowAsync();
    }

    private async Task RemoveComp(Competition comp)
    {
        DBContext.Remove(comp);
        await DBContext.SaveChangesAsync();
    }

}

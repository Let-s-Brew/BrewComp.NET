@page "/Competitions"
@page "/Competition"
@using System.Collections.ObjectModel
@inject BrewCompDbContext DBContext

<MudStack Spacing=2>
    <div><h3>Competitions</h3></div>
    <MudDataGrid Items=@_data Filterable=true ReadOnly=@_readOnly EditMode=@DataGridEditMode.Form RowsPerPage="25" Striped=true Bordered=true>
        <Columns>
            <HierarchyColumn T=Competition/>
            <PropertyColumn Property="c=>c.Name" Title="Competition Name"/>
            <TemplateColumn Title="Entries">
                <CellTemplate>
                    @(context.Item.Entries.Count == 0 ? "None" : context.Item.Entries.Count)
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Entry Limit">
                <CellTemplate>
                    @(context.Item.EntryLimit == null || context.Item.EntryLimit <= 0 ? "No Entry Limit" : context.Item.EntryLimit)
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="c=>c.EntryCost" Format="C"/>
            <PropertyColumn Property="c=>c.CompetitionDates.StartDate" Format="yyyy-mm-dd" Title="Start Date"/>
            <AuthorizeView Roles="siteadmin, coordinator">
                <TemplateColumn Filterable=false Sortable=false>
                    <HeaderTemplate Context=headerCell>
                        <MudButton StartIcon="@Icons.Material.Outlined.AddCircle" Color="Color.Info" Variant="Variant.Filled">Add</MudButton>
                    </HeaderTemplate>
                    <CellTemplate Context=row>
                        @if(context.User.IsInRole("siteadmin") || context.User.HasClaim("CompCoordinator", row.Item.Id.ToString())) {
                            <MudIconButton Icon="@Icons.Material.Outlined.DeleteForever" Color="Color.Error"
                                OnClick="x=>RemoveComp(row.Item)"/>
                            <MudIconButton Icon="@Icons.Material.Outlined.Edit" Color="Color.Surface"/>
                        }
                    </CellTemplate>
                </TemplateColumn>
            </AuthorizeView>
        </Columns>
        <ChildRowContent>
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">@context.Item.Name</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <div>Extra Comp Details will appear here</div>
                </MudCardContent>
            </MudCard>
        </ChildRowContent>
        <PagerContent>
            <MudDataGridPager T="Competition"/>
        </PagerContent>
    </MudDataGrid>
</MudStack>


@code {
    private bool _readOnly = false;
    private AddCompModal? addCompModal = default!;
    private ObservableCollection<Competition>? _data;

    protected override Task OnInitializedAsync()
    {
        _data = new ObservableCollection<Competition>(DBContext.Competitions.ToList());
        return base.OnInitializedAsync();
    }

    private async Task RemoveComp(Competition comp)
    {
        _data?.Remove(comp);
        DBContext.Remove(comp);
        await DBContext.SaveChangesAsync();
    }

}

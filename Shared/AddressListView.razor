@using BrewCode.AddressTools.Models
@using BlazorBootstrap
@using System.ComponentModel.DataAnnotations

<Grid TItem="CivicAddress" class="table table-hover table-bordered table-striped me-3" DataProvider="ListDataProvider"
    AllowPaging=true PageSize="5" EmptyText="No Addresses have been listed." Responsive=true>
    <GridColumn TItem="CivicAddress" HeaderText="Address" PropertyName="Address">
        @(string.Join("<br/>", context.Address))
    </GridColumn>
    <GridColumn TItem="CivicAddress" HeaderText="City" PropertyName="City">
        @context.City
    </GridColumn>
    <GridColumn TItem="CivicAddress" HeaderText="State" PropertyName="State">
        @context.State
    </GridColumn>
    <GridColumn TItem="CivicAddress" HeaderText="Zip" PropertyName="Zip">
        @context.PostalCode
    </GridColumn>
    @if(CanEdit)
    {
        <GridColumn TItem="CivicAddress" HeaderTextAlignment="Alignment.End">
            <HeaderContent>
                <div class="justify-content-end">
                    <Button Color="ButtonColor.Primary" @onclick="ShowAddAddress" Size="Size.Small"><Icon Name="IconName.PlusCircle" /> New</Button>
                </div>
            </HeaderContent>
            <ChildContent>
                <Button Color="ButtonColor.Danger" @onclick="()=>Data.Remove(context)"><Icon Name="IconName.Trash2Fill"/></Button>
            </ChildContent>
        </GridColumn>
    }
</Grid>

@if(CanEdit)
{
    <Collapse @ref="collapse">
        <EditForm Model="form" name="AddAddress" id="AddAddress" OnValidSubmit="AddAddress">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="form-group form-control mx-2">
                <div class="row mb-3 gx-2">
                    <label class="form-label">Address</label>
                    <InputTextArea rows="3" class="form-control" @bind-Value="form.Address" />
                </div>
                <div class="row row-cols-3 gx-2 mb-2">
                    <div class="col">
                        <label class="form-label">City</label>
                        <InputText class="form-control" @bind-Value="form.City"/>
                    </div>
                    <div class="col">
                        <label class="form-label">State</label>
                    </div>
                    <div class="col">
                        <label class="form-label">Zip/Postal Code</label>
                        <InputText class="form-control" @bind-Value="form.PostalCode" />
                    </div>
                </div>
                <div class="row justify-content-end">
                    <div class="col-2">
                        <Button Size=Size.Small Color="ButtonColor.Secondary" @onclick="CloseAddAddress">Cancel</Button>
                        <Button Size=Size.Small Type="ButtonType.Submit" Color="ButtonColor.Primary" form="AddAddress">Add</Button>
                    </div>
                </div>
            </div>
        </EditForm>
    </Collapse>
}
@code {
    [Parameter]
    public List<CivicAddress> Data { get; set; } = default!;

    [Parameter]
    public bool CanEdit { get; set; } = false;

    private Collapse? collapse = default!;
    private AddAddressForm form = new();

    private async Task<GridDataProviderResult<CivicAddress>> ListDataProvider (GridDataProviderRequest<CivicAddress> request)
    {
        return await Task.FromResult(request.ApplyTo(Data));
    }

    private async Task ShowAddAddress()
    {
        if(collapse is not null)
            await collapse.ShowAsync();
    }

    private async Task CloseAddAddress()
    {
        if (collapse is not null)
            await collapse.HideAsync();
    }

    private void AddAddress()
    {
        collapse?.HideAsync();
        return;
    }

    private class AddAddressForm
    {
        [Required]
        public string Address { get; set; } = null!;
        [Required]
        public string City { get; set; } = null!;
        [Required]
        public State State { get; set; } = default!;
        [Required]
        [RegularExpression(@"^\d{5}(-\d{4})*$", ErrorMessage = "Zip should be in format ##### or #####-####")]
        public string PostalCode { get; set; } = null!;
    }
}
